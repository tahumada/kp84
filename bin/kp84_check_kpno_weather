
import time
import requests
from bs4 import BeautifulSoup

import os, sys, optparse, shutil
from requests import Request

from astropy import units as u
from astropy.coordinates import EarthLocation
from astropy.time import Time, TimeDelta

from astroplan import Observer
from astroplan import FixedTarget

from twilio.rest import Client
from twilio.twiml.voice_response import Say, Sms

def parse_commandline():
    """
    Parse the options given on the command-line.
    """
    parser = optparse.OptionParser()

    parser.add_option("--doCall",  action="store_true", default=False)
    parser.add_option("--doText",  action="store_true", default=False)
    parser.add_option("--doNight",  action="store_true", default=False)

    parser.add_option("-p","--phone")

    opts, args = parser.parse_args()

    return opts

def get_status():
    webpage = "http://www-kpno.kpno.noao.edu/cgi-bin/Mtn_Weather/SiteHeader.pl"
    page = requests.get(webpage)

    # Create a BeautifulSoup object
    soup = BeautifulSoup(page.text, 'html.parser')

    status, status_string = -2, "Missing status"
    strings_to_match = ["Domes are OPEN","Domes are CLOSED","No Status"]
    dome_statuses = [1, 0, -1]

    table = soup.find_all("td")
    for row in table:
        for string_to_match, dome_status in zip(strings_to_match,dome_statuses):
            if string_to_match in str(row):
                status = dome_status
                status_string = string_to_match
                break
    return status, status_string

opts = parse_commandline()

if opts.doCall or opts.doText:
    client = Client()
    from_=os.environ.get('TWILIO_FROM')

location = EarthLocation.from_geodetic(-111.5967*u.deg, 31.9583*u.deg,
                                       2096*u.m)
kp = Observer(location=location, name="Kitt Peak",timezone="US/Arizona")

previous_status = -2
while True:
    status, status_string = get_status()
    tstart = Time.now()

    if not status == previous_status:
        print("Status change: %s"%status_string)

        if opts.doNight:
            coord = kp.sun_altaz(tstart)
            alt = coord.alt.deg
            if alt > -12.0:
                print('Sun is at %.2f degrees... not calling.' % alt)
                previous_status = status
                continue

        if opts.doCall or opts.doText:
            message = 'Greetings human, this is KPED Notices. Your dome status is: %s!'%status_string
            r = Request('GET', 'http://twimlets.com/message', params={'Message':message} )
            url = r.prepare().url

            if opts.doText:
                client.messages.create(to=opts.phone,
                                       from_=from_,
                                       body=message)
            if opts.doCall:
                client.calls.create(to=opts.phone,
                       from_=from_,
                       url=url)
 
    previous_status = status
    time.sleep(10)

